#!/bin/sh
# .git/hooks/pre-push
#
# This hook is executed before a push is made.
# It runs comprehensive checks to ensure code quality and security.

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo "${BLUE}ðŸš€ Running pre-push checks...${NC}"

# Load shared functions
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/shared/security-check.sh"
source "$SCRIPT_DIR/shared/quality-checks.sh"

# CRITICAL: Check for sensitive data in commits being pushed
COMMITS_TO_CHECK=""
while read local_ref local_sha remote_ref remote_sha; do
    if [ "$local_sha" != "0000000000000000000000000000000000000000" ]; then
        COMMITS_TO_CHECK="$COMMITS_TO_CHECK $local_sha"
    fi
done

if ! check_commits "$COMMITS_TO_CHECK"; then
    exit 1
fi

# Detect project type
PROJECT_INFO=$(detect_project_type)
REPO_NAME=$(echo "$PROJECT_INFO" | cut -d'|' -f1)
IS_RAILS_PROJECT=$(echo "$PROJECT_INFO" | cut -d'|' -f2)
IS_TYPESCRIPT_PROJECT=$(echo "$PROJECT_INFO" | cut -d'|' -f3)

# Skip TypeScript and linting checks (already run in pre-commit)
echo "${YELLOW}ðŸ’¡ TypeScript and linting checks already passed in pre-commit${NC}"

# Run Cypress tests
IS_MAIN_BRANCH="false"
if [ "$1" = "refs/heads/main" ] || [ "$1" = "refs/heads/master" ]; then
    IS_MAIN_BRANCH="true"
fi

if ! run_cypress_tests "$IS_MAIN_BRANCH"; then
    exit 1
fi

# Check if pushing to Heroku
REMOTE_URL=$(git remote get-url origin 2>/dev/null || git remote get-url heroku 2>/dev/null)
if echo "$REMOTE_URL" | grep -q "heroku"; then
    echo "${BLUE}ðŸŽ¯ Pushing to Heroku - ensuring production readiness${NC}"
    
    # Run build check for Heroku deployments
    if ! run_build_check; then
        exit 1
    fi
fi

echo "${GREEN}ðŸŽ‰ All pre-push checks passed!${NC}"
exit 0