#!/bin/sh
# .git/hooks/pre-commit
#
# This hook is executed before a commit is made.
# It runs TypeScript checking, linting, and Cypress tests based on project type.

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "${YELLOW}üîç Running pre-commit checks...${NC}"

# Detect project type
REPO_NAME=$(basename "$(git rev-parse --show-toplevel)")
IS_RAILS_PROJECT=false
IS_TYPESCRIPT_PROJECT=false

if [ -f "Gemfile" ] && grep -q "rails" Gemfile 2>/dev/null; then
    IS_RAILS_PROJECT=true
fi

if [ -f "tsconfig.json" ] || [ -f "tsconfig.app.json" ] || [ -f "tsconfig.node.json" ]; then
    IS_TYPESCRIPT_PROJECT=true
fi

# Check if we're in a TypeScript project
if [ "$IS_TYPESCRIPT_PROJECT" = true ]; then
    # Permanently skip TypeScript checks for games (known issues)
    if [ "$REPO_NAME" = "TrafficRun" ] || [ "$REPO_NAME" = "CrossyRoad" ] || [ "$REPO_NAME" = "SpaceShooter" ]; then
        echo "${YELLOW}‚ö†Ô∏è  Skipping TypeScript check for $REPO_NAME (games - permanent skip)${NC}"
    else
        # Run TypeScript check
        if command -v npx >/dev/null 2>&1; then
            echo "${YELLOW}üìù Running TypeScript check...${NC}"
        
            # Run TypeScript check and capture output
            TSC_OUTPUT=$(npx tsc --noEmit 2>&1)
            TSC_EXIT_CODE=$?
            
            if [ $TSC_EXIT_CODE -eq 0 ]; then
                echo "${GREEN}‚úÖ TypeScript check passed${NC}"
            else
                echo "${RED}‚ùå TypeScript check failed${NC}"
                echo "${RED}TypeScript errors:${NC}"
                echo "$TSC_OUTPUT"
                echo "${RED}Please fix TypeScript errors before committing.${NC}"
                exit 1
            fi
        else
            echo "${YELLOW}‚ö†Ô∏è  npx not found, skipping TypeScript check${NC}"
        fi
    fi
fi

# Check if we have a linting script
if [ -f "package.json" ]; then
    # Permanently skip linting for games
    REPO_NAME=$(basename "$(git rev-parse --show-toplevel)")
    if [ "$REPO_NAME" = "TrafficRun" ] || [ "$REPO_NAME" = "CrossyRoad" ] || [ "$REPO_NAME" = "SpaceShooter" ]; then
        echo "${YELLOW}‚ö†Ô∏è  Skipping linting for $REPO_NAME (games - permanent skip)${NC}"
    else
        # Check for common linting scripts
        if npm run lint --dry-run >/dev/null 2>&1; then
            echo "${YELLOW}üßπ Running linter...${NC}"

            # Run linter and capture output
            LINT_OUTPUT=$(npm run lint 2>&1)
            LINT_EXIT_CODE=$?

            if [ $LINT_EXIT_CODE -eq 0 ]; then
                echo "${GREEN}‚úÖ Linting passed${NC}"
                
                # Auto-stage any fixes made by the linter
                if [ -n "$(git diff --cached --name-only)" ]; then
                    echo "${YELLOW}üì¶ Auto-staging linter fixes...${NC}"
                    git add .
                fi
            else
                echo "${RED}‚ùå Linting failed${NC}"
                echo "${RED}Linting errors:${NC}"
                echo "$LINT_OUTPUT"
                echo "${RED}Please fix linting errors before committing.${NC}"
                exit 1
            fi
        else
            echo "${YELLOW}‚ö†Ô∏è  No lint script found, skipping linting${NC}"
        fi
    fi

    # SKIP: Check for build script
    # if npm run build --dry-run >/dev/null 2>&1; then
    #     echo "${YELLOW}üî® Running build check...${NC}"
    #
    #     # Run build to ensure everything compiles
    #     if npm run build; then
    #         echo "${GREEN}‚úÖ Build check passed${NC}"
    #     else
    #         echo "${RED}‚ùå Build check failed${NC}"
    #         echo "${RED}Please fix build errors before committing.${NC}"
    #         exit 1
    #     fi
    # else
    #     echo "${YELLOW}‚ö†Ô∏è  No build script found, skipping build check${NC}"
    # fi
fi

# Check for Cypress tests in Rails projects
if [ "$IS_RAILS_PROJECT" = true ] && [ -f "package.json" ] && [ -d "cypress" ]; then
    # Check if Rails server is running
    if curl -s http://localhost:3000 > /dev/null 2>&1; then
        # Check for test script
        if npm run test --dry-run >/dev/null 2>&1; then
            echo "${YELLOW}üß™ Running Cypress tests...${NC}"

            # Load nvm if available
            if [ -s "$HOME/.nvm/nvm.sh" ]; then
                . "$HOME/.nvm/nvm.sh"
            fi

            # Run Cypress tests and capture output
            TEST_OUTPUT=$(npm run test 2>&1)
            TEST_EXIT_CODE=$?

            if [ $TEST_EXIT_CODE -eq 0 ]; then
                echo "${GREEN}‚úÖ All Cypress tests passed${NC}"
            else
                echo "${RED}‚ùå Cypress tests failed${NC}"
                echo "${RED}Test output:${NC}"
                echo "$TEST_OUTPUT"
                echo "${RED}Please fix failing tests before committing.${NC}"
                exit 1
            fi
        else
            echo "${YELLOW}‚ö†Ô∏è  No test script found, skipping Cypress tests${NC}"
        fi
    else
        echo "${YELLOW}‚ö†Ô∏è  Rails server not running on port 3000, skipping Cypress tests${NC}"
        echo "${YELLOW}üí° Start server with: rails s${NC}"
    fi
fi

echo "${GREEN}üéâ All pre-commit checks passed!${NC}"
exit 0
